package edu.sinchuk.kurs.views;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.validator.EmailValidator;
import com.vaadin.data.validator.RegexpValidator;
import com.vaadin.data.validator.StringLengthValidator;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.*;
import com.vaadin.ui.declarative.Design;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Button;
import edu.sinchuk.kurs.controllers.queries.UserQuery;
import edu.sinchuk.kurs.models.entities.UserEntity;
import edu.sinchuk.kurs.models.services.DataBaseConnection;

import java.sql.SQLException;

/**
 * !! DO NOT EDIT THIS FILE !!
 * <p>
 * This class is generated by Vaadin Designer and will be overwritten.
 * <p>
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class EditProfileView extends FormLayout implements View {

    final static public String NAME = "editProfile";

    protected Label title;
    protected TextField login;
    protected PasswordField pass;
    protected PasswordField passVerf;
    protected TextField name;
    protected TextField lastName;
    protected Button save;
    protected Button cancel;

    public EditProfileView(String lastView) {
        Design.read(this);

        login.addValidator(new RegexpValidator("^[a-zA-Z][a-zA-Z0-9-_\\.]{1,20}$","Login type error..."));
        pass.addValidator(new StringLengthValidator("Pass type error...",8,20,false));
        passVerf.addValidator(new StringLengthValidator("Pass type error...",8,20,false));
        name.addValidator(new StringLengthValidator("Name type error...",3,20,false));
        lastName.addValidator(new StringLengthValidator("Lastname type error...", 3,20,false));

        UserEntity user = ((UserEntity) VaadinSession.getCurrent().getAttribute("user"));
        login.setValue(user.getUserLogin());
        pass.setValue(user.getUserPassword());
        passVerf.setValue(user.getUserPassword());
        name.setValue(user.getUserName());
        lastName.setValue(user.getUserLastName());

        save.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                if (pass.getValue() == passVerf.getValue()) {
                    DataBaseConnection connection = new DataBaseConnection();
                    try {
                        UserQuery userQuery = new UserQuery(connection.connect());
                        userQuery.updateUser(user.getUserId(), login.getValue(), pass.getValue(),
                                name.getValue(), lastName.getValue(), user.getFkGroupId());

                        user.setUserLogin(login.getValue());
                        user.setUserPassword(pass.getValue());
                        user.setUserName(name.getValue());
                        user.setUserLastName(lastName.getValue());

                        VaadinSession.getCurrent().setAttribute("user",user);
                        UI.getCurrent().getNavigator().navigateTo(lastView);
                    } catch (ClassNotFoundException e) {
                        addComponent(new Label("Ошибка обновления данных!!!"));
                    } catch (SQLException e) {
                        addComponent(new Label("Ошибка обновления данных!!!"));
                    }
                } else {
                    addComponent(new Label("Пароли не одинаковы!!!"));
                }
            }
        });

        cancel.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                UI.getCurrent().getNavigator().navigateTo(lastView);
            }
        });
    }

    @Override
    public void enter(ViewChangeListener.ViewChangeEvent viewChangeEvent) {

    }
}
